{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thanu\\\\Desktop\\\\musicgenerator\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./App.css\";\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [selectedImage, setSelectedImage] = useState(null);\n  const [musicUrl, setMusicUrl] = useState(\"\");\n  const handleGenerateMusic = async () => {\n    if (!selectedImage) {\n      alert(\"Please upload an image first.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"image\", selectedImage);\n    try {\n      const response = await fetch(\"http://localhost:5000/api/generate-music\", {\n        method: \"POST\",\n        body: formData\n      });\n      const data = await response.json();\n      if (response.ok) {\n        setMusicUrl(`http://localhost:5000/${data.filePath}`);\n      } else {\n        alert(\"Music generation failed.\");\n      }\n    } catch (error) {\n      console.error(\"Error:\", error);\n      alert(\"Something went wrong.\");\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [...Array(15)].map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"music-icon\",\n        style: {\n          left: `${Math.random() * 100}%`,\n          top: `${Math.random() * 100}%`,\n          animationDelay: `${Math.random() * 10}s`\n        }\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"AI Music Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Upload an image and let the music flow \\uD83C\\uDFB6\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"file\",\n        accept: \"image/*\",\n        onChange: e => setSelectedImage(e.target.files[0]),\n        style: {\n          marginTop: \"20px\"\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGenerateMusic,\n        children: \"Generate Music\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 9\n      }, this), musicUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          marginTop: \"20px\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Music generated successfully!\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n          controls: true,\n          src: musicUrl\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"8qjD+FEDNBtp94kYUBeek4zS1CM=\");\n_c = App;\nexport default App;\nconst formData = new FormData();\nformData.append('image', selectedFile); // this key must match `.single('image')` in backend\n\nfetch('http://localhost:5000/api/generate-music', {\n  method: 'POST',\n  body: formData\n}).then(response => response.json()).then(data => {\n  setMusicUrl(data.musicUrl);\n}).catch(error => {\n  console.error('Error:', error);\n  alert('Something went wrong.');\n});\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","selectedImage","setSelectedImage","musicUrl","setMusicUrl","handleGenerateMusic","alert","formData","FormData","append","response","fetch","method","body","data","json","ok","filePath","error","console","children","Array","map","_","i","className","style","left","Math","random","top","animationDelay","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","e","target","files","marginTop","onClick","controls","src","_c","selectedFile","then","catch","$RefreshReg$"],"sources":["C:/Users/thanu/Desktop/musicgenerator/client/src/App.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"./App.css\";\r\n\r\nfunction App() {\r\n  const [selectedImage, setSelectedImage] = useState(null);\r\n  const [musicUrl, setMusicUrl] = useState(\"\");\r\n\r\n  const handleGenerateMusic = async () => {\r\n    if (!selectedImage) {\r\n      alert(\"Please upload an image first.\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"image\", selectedImage);\r\n\r\n    try {\r\n      const response = await fetch(\"http://localhost:5000/api/generate-music\", {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      const data = await response.json();\r\n\r\n      if (response.ok) {\r\n        setMusicUrl(`http://localhost:5000/${data.filePath}`);\r\n      } else {\r\n        alert(\"Music generation failed.\");\r\n      }\r\n    } catch (error) {\r\n      console.error(\"Error:\", error);\r\n      alert(\"Something went wrong.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Floating music icons */}\r\n      <div>\r\n        {[...Array(15)].map((_, i) => (\r\n          <div\r\n            key={i}\r\n            className=\"music-icon\"\r\n            style={{\r\n              left: `${Math.random() * 100}%`,\r\n              top: `${Math.random() * 100}%`,\r\n              animationDelay: `${Math.random() * 10}s`,\r\n            }}\r\n          ></div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* UI Container */}\r\n      <div className=\"container\">\r\n        <h1>AI Music Generator</h1>\r\n        <p>Upload an image and let the music flow ðŸŽ¶</p>\r\n\r\n        {/* File Upload */}\r\n        <input\r\n          type=\"file\"\r\n          accept=\"image/*\"\r\n          onChange={(e) => setSelectedImage(e.target.files[0])}\r\n          style={{ marginTop: \"20px\" }}\r\n        />\r\n\r\n        {/* Generate Button */}\r\n        <button onClick={handleGenerateMusic}>Generate Music</button>\r\n\r\n        {/* Music Player */}\r\n        {musicUrl && (\r\n          <div style={{ marginTop: \"20px\" }}>\r\n            <p>Music generated successfully!</p>\r\n            <audio controls src={musicUrl}></audio>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\nconst formData = new FormData();\r\nformData.append('image', selectedFile); // this key must match `.single('image')` in backend\r\n\r\nfetch('http://localhost:5000/api/generate-music', {\r\n  method: 'POST',\r\n  body: formData,\r\n})\r\n  .then(response => response.json())\r\n  .then(data => {\r\n    setMusicUrl(data.musicUrl);\r\n  })\r\n  .catch(error => {\r\n    console.error('Error:', error);\r\n    alert('Something went wrong.');\r\n  });\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}