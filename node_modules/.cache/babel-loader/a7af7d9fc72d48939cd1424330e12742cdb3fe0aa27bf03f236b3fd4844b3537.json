{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thanu\\\\Desktop\\\\musicgenerator\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [file, setFile] = useState(null);\n  const [loading, setLoading] = useState(false);\n  const handleFileChange = e => {\n    const uploaded = e.target.files[0];\n    if (uploaded) {\n      setFile(uploaded);\n      console.log(\"Selected file:\", uploaded);\n    }\n  };\n  const handleGenerate = async () => {\n    if (!file) {\n      alert(\"Please upload an image first.\");\n      return;\n    }\n    const formData = new FormData();\n    formData.append(\"image\", file);\n    setLoading(true);\n    try {\n      const response = await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:5000'}/generate-music`, {\n        method: \"POST\",\n        body: formData\n      });\n      if (!response.ok) {\n        const errText = await response.text();\n        throw new Error(`Server error: ${response.status} - ${errText}`);\n      }\n      const data = await response.json();\n      console.log(\"Music generated:\", data);\n      alert(\"Music generation successful!\");\n    } catch (error) {\n      console.error(\"Error generating music:\", error);\n      alert(\"Failed to generate music.\");\n    } finally {\n      setLoading(false);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [...Array(15)].map((_, i) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"music-icon\",\n        style: {\n          left: `${Math.random() * 100}%`,\n          top: `${Math.random() * 100}%`,\n          animationDelay: `${Math.random() * 10}s`\n        }\n      }, i, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"container\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"AI Music Generator\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Generate music from your mood or an image \\uD83C\\uDFBC\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"upload-wrapper\",\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          htmlFor: \"file-upload\",\n          className: \"upload-label\",\n          children: /*#__PURE__*/_jsxDEV(\"span\", {\n            className: \"tooltip\",\n            children: \"Click to upload image\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"file\",\n          id: \"file-upload\",\n          style: {\n            display: 'none'\n          },\n          accept: \"image/*\",\n          onChange: handleFileChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: handleGenerate,\n        disabled: loading,\n        children: loading ? \"Generating...\" : \"Generate\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_s(App, \"b5r+Px8JiWNYfU82tOaR18FdgbQ=\");\n_c = App;\nexport default App;\napp.get('/', (req, res) => {\n  res.send('ðŸŽµ AI Music Generator Backend is Running!');\n});\n/*#__PURE__*/_jsxDEV(\"input\", {\n  type: \"file\",\n  accept: \"image/*\",\n  onChange: e => setSelectedImage(e.target.files[0])\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 96,\n  columnNumber: 1\n}, this);\nconst [selectedImage, setSelectedImage] = useState(null);\nconst [musicUrl, setMusicUrl] = useState('');\nconst handleGenerateMusic = async () => {\n  if (!selectedImage) {\n    alert(\"Please upload an image first.\");\n    return;\n  }\n  const formData = new FormData();\n  formData.append(\"image\", selectedImage);\n  try {\n    const response = await fetch(\"http://localhost:5000/api/generate-music\", {\n      method: \"POST\",\n      body: formData\n    });\n    const data = await response.json();\n    if (response.ok) {\n      setMusicUrl(`http://localhost:5000/${data.filePath}`);\n    } else {\n      alert(\"Music generation failed.\");\n    }\n  } catch (error) {\n    console.error(\"Error:\", error);\n    alert(\"Something went wrong.\");\n  }\n};\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","Fragment","_Fragment","App","_s","file","setFile","loading","setLoading","handleFileChange","e","uploaded","target","files","console","log","handleGenerate","alert","formData","FormData","append","response","fetch","process","env","REACT_APP_API_URL","method","body","ok","errText","text","Error","status","data","json","error","children","Array","map","_","i","className","style","left","Math","random","top","animationDelay","fileName","_jsxFileName","lineNumber","columnNumber","htmlFor","type","id","display","accept","onChange","onClick","disabled","_c","app","get","req","res","send","setSelectedImage","selectedImage","musicUrl","setMusicUrl","handleGenerateMusic","filePath","$RefreshReg$"],"sources":["C:/Users/thanu/Desktop/musicgenerator/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css';\r\n\r\nfunction App() {\r\n  const [file, setFile] = useState(null);\r\n  const [loading, setLoading] = useState(false);\r\n\r\n  const handleFileChange = (e) => {\r\n    const uploaded = e.target.files[0];\r\n    if (uploaded) {\r\n      setFile(uploaded);\r\n      console.log(\"Selected file:\", uploaded);\r\n    }\r\n  };\r\n\r\n  const handleGenerate = async () => {\r\n    if (!file) {\r\n      alert(\"Please upload an image first.\");\r\n      return;\r\n    }\r\n\r\n    const formData = new FormData();\r\n    formData.append(\"image\", file);\r\n\r\n    setLoading(true);\r\n\r\n    try {\r\n      const response = await fetch(`${process.env.REACT_APP_API_URL || 'http://localhost:5000'}/generate-music`, {\r\n        method: \"POST\",\r\n        body: formData,\r\n      });\r\n\r\n      if (!response.ok) {\r\n        const errText = await response.text();\r\n        throw new Error(`Server error: ${response.status} - ${errText}`);\r\n      }\r\n\r\n      const data = await response.json();\r\n      console.log(\"Music generated:\", data);\r\n      alert(\"Music generation successful!\");\r\n    } catch (error) {\r\n      console.error(\"Error generating music:\", error);\r\n      alert(\"Failed to generate music.\");\r\n    } finally {\r\n      setLoading(false);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {/* Floating music icons */}\r\n      <div>\r\n        {[...Array(15)].map((_, i) => (\r\n          <div\r\n            key={i}\r\n            className=\"music-icon\"\r\n            style={{\r\n              left: `${Math.random() * 100}%`,\r\n              top: `${Math.random() * 100}%`,\r\n              animationDelay: `${Math.random() * 10}s`,\r\n            }}\r\n          ></div>\r\n        ))}\r\n      </div>\r\n\r\n      {/* UI */}\r\n      <div className=\"container\">\r\n        <h1>AI Music Generator</h1>\r\n        <p>Generate music from your mood or an image ðŸŽ¼</p>\r\n\r\n        <div className=\"upload-wrapper\">\r\n          <label htmlFor=\"file-upload\" className=\"upload-label\">\r\n            <span className=\"tooltip\">Click to upload image</span>\r\n          </label>\r\n          <input\r\n            type=\"file\"\r\n            id=\"file-upload\"\r\n            style={{ display: 'none' }}\r\n            accept=\"image/*\"\r\n            onChange={handleFileChange}\r\n          />\r\n        </div>\r\n\r\n        <button onClick={handleGenerate} disabled={loading}>\r\n          {loading ? \"Generating...\" : \"Generate\"}\r\n        </button>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\napp.get('/', (req, res) => {\r\n  res.send('ðŸŽµ AI Music Generator Backend is Running!');\r\n});\r\n<input\r\n  type=\"file\"\r\n  accept=\"image/*\"\r\n  onChange={(e) => setSelectedImage(e.target.files[0])}\r\n/>\r\nconst [selectedImage, setSelectedImage] = useState(null);\r\nconst [musicUrl, setMusicUrl] = useState('');\r\nconst handleGenerateMusic = async () => {\r\n  if (!selectedImage) {\r\n    alert(\"Please upload an image first.\");\r\n    return;\r\n  }\r\n\r\n  const formData = new FormData();\r\n  formData.append(\"image\", selectedImage);\r\n\r\n  try {\r\n    const response = await fetch(\"http://localhost:5000/api/generate-music\", {\r\n      method: \"POST\",\r\n      body: formData\r\n    });\r\n\r\n    const data = await response.json();\r\n\r\n    if (response.ok) {\r\n      setMusicUrl(`http://localhost:5000/${data.filePath}`);\r\n    } else {\r\n      alert(\"Music generation failed.\");\r\n    }\r\n  } catch (error) {\r\n    console.error(\"Error:\", error);\r\n    alert(\"Something went wrong.\");\r\n  }\r\n};\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAEnB,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,IAAI,EAAEC,OAAO,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EACtC,MAAM,CAACS,OAAO,EAAEC,UAAU,CAAC,GAAGV,QAAQ,CAAC,KAAK,CAAC;EAE7C,MAAMW,gBAAgB,GAAIC,CAAC,IAAK;IAC9B,MAAMC,QAAQ,GAAGD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClC,IAAIF,QAAQ,EAAE;MACZL,OAAO,CAACK,QAAQ,CAAC;MACjBG,OAAO,CAACC,GAAG,CAAC,gBAAgB,EAAEJ,QAAQ,CAAC;IACzC;EACF,CAAC;EAED,MAAMK,cAAc,GAAG,MAAAA,CAAA,KAAY;IACjC,IAAI,CAACX,IAAI,EAAE;MACTY,KAAK,CAAC,+BAA+B,CAAC;MACtC;IACF;IAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAEf,IAAI,CAAC;IAE9BG,UAAU,CAAC,IAAI,CAAC;IAEhB,IAAI;MACF,MAAMa,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGC,OAAO,CAACC,GAAG,CAACC,iBAAiB,IAAI,uBAAuB,iBAAiB,EAAE;QACzGC,MAAM,EAAE,MAAM;QACdC,IAAI,EAAET;MACR,CAAC,CAAC;MAEF,IAAI,CAACG,QAAQ,CAACO,EAAE,EAAE;QAChB,MAAMC,OAAO,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;QACrC,MAAM,IAAIC,KAAK,CAAC,iBAAiBV,QAAQ,CAACW,MAAM,MAAMH,OAAO,EAAE,CAAC;MAClE;MAEA,MAAMI,IAAI,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAC,CAAC;MAClCpB,OAAO,CAACC,GAAG,CAAC,kBAAkB,EAAEkB,IAAI,CAAC;MACrChB,KAAK,CAAC,8BAA8B,CAAC;IACvC,CAAC,CAAC,OAAOkB,KAAK,EAAE;MACdrB,OAAO,CAACqB,KAAK,CAAC,yBAAyB,EAAEA,KAAK,CAAC;MAC/ClB,KAAK,CAAC,2BAA2B,CAAC;IACpC,CAAC,SAAS;MACRT,UAAU,CAAC,KAAK,CAAC;IACnB;EACF,CAAC;EAED,oBACER,OAAA,CAAAE,SAAA;IAAAkC,QAAA,gBAEEpC,OAAA;MAAAoC,QAAA,EACG,CAAC,GAAGC,KAAK,CAAC,EAAE,CAAC,CAAC,CAACC,GAAG,CAAC,CAACC,CAAC,EAAEC,CAAC,kBACvBxC,OAAA;QAEEyC,SAAS,EAAC,YAAY;QACtBC,KAAK,EAAE;UACLC,IAAI,EAAE,GAAGC,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG;UAC/BC,GAAG,EAAE,GAAGF,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,GAAG,GAAG;UAC9BE,cAAc,EAAE,GAAGH,IAAI,CAACC,MAAM,CAAC,CAAC,GAAG,EAAE;QACvC;MAAE,GANGL,CAAC;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOF,CACP;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACC,CAAC,eAGNnD,OAAA;MAAKyC,SAAS,EAAC,WAAW;MAAAL,QAAA,gBACxBpC,OAAA;QAAAoC,QAAA,EAAI;MAAkB;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC3BnD,OAAA;QAAAoC,QAAA,EAAG;MAA4C;QAAAY,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAAC,eAEnDnD,OAAA;QAAKyC,SAAS,EAAC,gBAAgB;QAAAL,QAAA,gBAC7BpC,OAAA;UAAOoD,OAAO,EAAC,aAAa;UAACX,SAAS,EAAC,cAAc;UAAAL,QAAA,eACnDpC,OAAA;YAAMyC,SAAS,EAAC,SAAS;YAAAL,QAAA,EAAC;UAAqB;YAAAY,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAM;QAAC;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACjD,CAAC,eACRnD,OAAA;UACEqD,IAAI,EAAC,MAAM;UACXC,EAAE,EAAC,aAAa;UAChBZ,KAAK,EAAE;YAAEa,OAAO,EAAE;UAAO,CAAE;UAC3BC,MAAM,EAAC,SAAS;UAChBC,QAAQ,EAAEhD;QAAiB;UAAAuC,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAC5B,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACC,CAAC,eAENnD,OAAA;QAAQ0D,OAAO,EAAE1C,cAAe;QAAC2C,QAAQ,EAAEpD,OAAQ;QAAA6B,QAAA,EAChD7B,OAAO,GAAG,eAAe,GAAG;MAAU;QAAAyC,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACjC,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACN,CAAC;EAAA,eACN,CAAC;AAEP;AAAC/C,EAAA,CAtFQD,GAAG;AAAAyD,EAAA,GAAHzD,GAAG;AAwFZ,eAAeA,GAAG;AAClB0D,GAAG,CAACC,GAAG,CAAC,GAAG,EAAE,CAACC,GAAG,EAAEC,GAAG,KAAK;EACzBA,GAAG,CAACC,IAAI,CAAC,2CAA2C,CAAC;AACvD,CAAC,CAAC;AACF,aAAAjE,OAAA;EACEqD,IAAI,EAAC,MAAM;EACXG,MAAM,EAAC,SAAS;EAChBC,QAAQ,EAAG/C,CAAC,IAAKwD,gBAAgB,CAACxD,CAAC,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;AAAE;EAAAmC,QAAA,EAAAC,YAAA;EAAAC,UAAA;EAAAC,YAAA;AAAA,OACtD,CAAC;AACF,MAAM,CAACgB,aAAa,EAAED,gBAAgB,CAAC,GAAGpE,QAAQ,CAAC,IAAI,CAAC;AACxD,MAAM,CAACsE,QAAQ,EAAEC,WAAW,CAAC,GAAGvE,QAAQ,CAAC,EAAE,CAAC;AAC5C,MAAMwE,mBAAmB,GAAG,MAAAA,CAAA,KAAY;EACtC,IAAI,CAACH,aAAa,EAAE;IAClBlD,KAAK,CAAC,+BAA+B,CAAC;IACtC;EACF;EAEA,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;EAC/BD,QAAQ,CAACE,MAAM,CAAC,OAAO,EAAE+C,aAAa,CAAC;EAEvC,IAAI;IACF,MAAM9C,QAAQ,GAAG,MAAMC,KAAK,CAAC,0CAA0C,EAAE;MACvEI,MAAM,EAAE,MAAM;MACdC,IAAI,EAAET;IACR,CAAC,CAAC;IAEF,MAAMe,IAAI,GAAG,MAAMZ,QAAQ,CAACa,IAAI,CAAC,CAAC;IAElC,IAAIb,QAAQ,CAACO,EAAE,EAAE;MACfyC,WAAW,CAAC,yBAAyBpC,IAAI,CAACsC,QAAQ,EAAE,CAAC;IACvD,CAAC,MAAM;MACLtD,KAAK,CAAC,0BAA0B,CAAC;IACnC;EACF,CAAC,CAAC,OAAOkB,KAAK,EAAE;IACdrB,OAAO,CAACqB,KAAK,CAAC,QAAQ,EAAEA,KAAK,CAAC;IAC9BlB,KAAK,CAAC,uBAAuB,CAAC;EAChC;AACF,CAAC;AAAC,IAAA2C,EAAA;AAAAY,YAAA,CAAAZ,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}