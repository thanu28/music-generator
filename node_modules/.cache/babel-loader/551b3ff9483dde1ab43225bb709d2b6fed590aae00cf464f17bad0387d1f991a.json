{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\thanu\\\\Desktop\\\\musicgenerator\\\\client\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport './App.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst App = () => {\n  _s();\n  const [image, setImage] = useState(null);\n  const [previewUrl, setPreviewUrl] = useState(null);\n  const handleFileChange = event => {\n    const file = event.target.files[0];\n    setImage(file);\n    if (file) {\n      const preview = URL.createObjectURL(file);\n      setPreviewUrl(preview);\n    }\n  };\n  const handleGenerate = () => {\n    if (!image) {\n      alert('Please upload an image!');\n      return;\n    }\n    // You can later POST `image` to your backend from here\n    console.log(\"Image ready for upload:\", image);\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      className: \"title\",\n      children: \"\\uD83C\\uDFB5 AI Music Generator \\uD83C\\uDFB6\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"subtitle\",\n      children: \"Upload your image to generate music\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n      type: \"file\",\n      accept: \"image/*\",\n      onChange: handleFileChange,\n      className: \"upload-input\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this), previewUrl && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"preview-container\",\n      children: /*#__PURE__*/_jsxDEV(\"img\", {\n        src: previewUrl,\n        alt: \"preview\",\n        className: \"preview-img\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"generate-btn\",\n      onClick: handleGenerate,\n      children: \"Generate Music\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 5\n  }, this);\n};\n_s(App, \"U7NyzOjbq1vn/eP3prYFrMtaBqw=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","jsxDEV","_jsxDEV","App","_s","image","setImage","previewUrl","setPreviewUrl","handleFileChange","event","file","target","files","preview","URL","createObjectURL","handleGenerate","alert","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","accept","onChange","src","alt","onClick","_c","$RefreshReg$"],"sources":["C:/Users/thanu/Desktop/musicgenerator/client/src/App.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport './App.css';\r\n\r\nconst App = () => {\r\n  const [image, setImage] = useState(null);\r\n  const [previewUrl, setPreviewUrl] = useState(null);\r\n\r\n  const handleFileChange = (event) => {\r\n    const file = event.target.files[0];\r\n    setImage(file);\r\n    if (file) {\r\n      const preview = URL.createObjectURL(file);\r\n      setPreviewUrl(preview);\r\n    }\r\n  };\r\n\r\n  const handleGenerate = () => {\r\n    if (!image) {\r\n      alert('Please upload an image!');\r\n      return;\r\n    }\r\n    // You can later POST `image` to your backend from here\r\n    console.log(\"Image ready for upload:\", image);\r\n  };\r\n\r\n  return (\r\n    <div className=\"container\">\r\n      <h1 className=\"title\">ðŸŽµ AI Music Generator ðŸŽ¶</h1>\r\n      <p className=\"subtitle\">Upload your image to generate music</p>\r\n\r\n      <input\r\n        type=\"file\"\r\n        accept=\"image/*\"\r\n        onChange={handleFileChange}\r\n        className=\"upload-input\"\r\n      />\r\n\r\n      {previewUrl && (\r\n        <div className=\"preview-container\">\r\n          <img src={previewUrl} alt=\"preview\" className=\"preview-img\" />\r\n        </div>\r\n      )}\r\n\r\n      <button className=\"generate-btn\" onClick={handleGenerate}>\r\n        Generate Music\r\n      </button>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,WAAW;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnB,MAAMC,GAAG,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGN,QAAQ,CAAC,IAAI,CAAC;EACxC,MAAM,CAACO,UAAU,EAAEC,aAAa,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;EAElD,MAAMS,gBAAgB,GAAIC,KAAK,IAAK;IAClC,MAAMC,IAAI,GAAGD,KAAK,CAACE,MAAM,CAACC,KAAK,CAAC,CAAC,CAAC;IAClCP,QAAQ,CAACK,IAAI,CAAC;IACd,IAAIA,IAAI,EAAE;MACR,MAAMG,OAAO,GAAGC,GAAG,CAACC,eAAe,CAACL,IAAI,CAAC;MACzCH,aAAa,CAACM,OAAO,CAAC;IACxB;EACF,CAAC;EAED,MAAMG,cAAc,GAAGA,CAAA,KAAM;IAC3B,IAAI,CAACZ,KAAK,EAAE;MACVa,KAAK,CAAC,yBAAyB,CAAC;MAChC;IACF;IACA;IACAC,OAAO,CAACC,GAAG,CAAC,yBAAyB,EAAEf,KAAK,CAAC;EAC/C,CAAC;EAED,oBACEH,OAAA;IAAKmB,SAAS,EAAC,WAAW;IAAAC,QAAA,gBACxBpB,OAAA;MAAImB,SAAS,EAAC,OAAO;MAAAC,QAAA,EAAC;IAAwB;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAI,CAAC,eACnDxB,OAAA;MAAGmB,SAAS,EAAC,UAAU;MAAAC,QAAA,EAAC;IAAmC;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAG,CAAC,eAE/DxB,OAAA;MACEyB,IAAI,EAAC,MAAM;MACXC,MAAM,EAAC,SAAS;MAChBC,QAAQ,EAAEpB,gBAAiB;MAC3BY,SAAS,EAAC;IAAc;MAAAE,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACzB,CAAC,EAEDnB,UAAU,iBACTL,OAAA;MAAKmB,SAAS,EAAC,mBAAmB;MAAAC,QAAA,eAChCpB,OAAA;QAAK4B,GAAG,EAAEvB,UAAW;QAACwB,GAAG,EAAC,SAAS;QAACV,SAAS,EAAC;MAAa;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAC3D,CACN,eAEDxB,OAAA;MAAQmB,SAAS,EAAC,cAAc;MAACW,OAAO,EAAEf,cAAe;MAAAK,QAAA,EAAC;IAE1D;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACN,CAAC;AAEV,CAAC;AAACtB,EAAA,CA7CID,GAAG;AAAA8B,EAAA,GAAH9B,GAAG;AA+CT,eAAeA,GAAG;AAAC,IAAA8B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}